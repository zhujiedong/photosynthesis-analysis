{
  "hash": "8f93ca701724020ea88da84c6a79e322",
  "result": {
    "engine": "knitr",
    "markdown": "# 快速`ACi` 曲线 (RACiR) {#sec-racir-dat} \n\nRACiR (@sec-aci-vs-racir) 曲线已经证明了他的价值 [例如 @stinziano2017; @stinziano2018; @Coursolle12019]，@saathoff_gas_2021 介绍了使用 LI-6800 进行几种不同方式的二氧化碳响应曲线的测量，分别是 RACiR，DAT（Dynamic Assimiliation Technique）ACi 曲线与稳态 ACi 曲线（传统方式）。\n\n![几种不同方式测量 ACi 曲线](https://onlinelibrary.wiley.com/cms/asset/896a089d-2347-45d0-a7b3-e6feff6de6ee/pce14178-fig-0003-m.jpg){#fig-all-aci-method}\n\n\n在结果计算上，三者有一致也存在差异，但很难下结论哪种方式更准确，ACi 曲线测量时经典方式，但它使用的数据点非常少，而 RACiR 和 DAT 测量的快速 ACi 则有着 '海量' 的数据点，在参数估计上有着相当大的优势，但很多不确定性值得进一步研究 [@saathoff_gas_2021]。我们这里单纯从响应曲线拟合上看一下数据的情况。\n\n## 使用 `plantecophys` 来拟合 {#sec-racir-dat-fitaci}\n\n我这里使用一个测量水稻的数据来进行演示，测量方式是使用的 DAT 技术的快速 ACi 曲线，正常情况下使用 `plantecophys` 分析 LI-6800 数据应该是这样：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"plantecophys\")\n\ndat_aci <- read.csv('data/racir_adyn.csv')\n\ndat1 <- fitaci(\n  dat_aci,\n  varnames = list(\n    ALEAF = \"A\",\n    Tleaf = \"TleafCnd\",\n    Ci = \"Ci\",\n    PPFD = \"Qin\"\n  ),\n  alpha = 0.5,\n  theta = 1\n)\n```\n:::\n\n\n计算参数为：\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat1$pars\n```\n:::\n\n::: {.cell tbl-cap='{}'}\n::: {.cell-output-display}\n\n\nTable: plantecophys 拟合 DAT 测量的参数 {#tbl-plantecophys1}\n\n|      |  Estimate| Std. Error|\n|:-----|---------:|----------:|\n|Vcmax | 26.994837|  0.1154895|\n|Jmax  | 46.638084|  0.1159879|\n|Rd    |  1.380359|  0.0214664|\n\n\n:::\n:::\n\n作图查看为：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dat1)\n```\n\n::: {.cell-output-display}\n![使用 plantecophys 拟合 DAT 数据的图形](DAT-vs-racir_files/figure-html/fig-plantecophys1-1.png){#fig-plantecophys1 width=672}\n:::\n:::\n\n但是 `plantecophys` 是专用于 LI-6400 的参数，使用 LI-6800 修改参数略微麻烦，我于是将其 `fitaci` 函数略做修改，使其方便用于 LI-6800 (@sec-use-fitaci):\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2 <- plantecophys2::fitaci(\n  dat_aci,\n  varnames = list(\n    ALEAF = \"A\",\n    Tleaf = \"TleafCnd\",\n    Ci = \"Ci\",\n    PPFD = \"Qin\"\n  ),\n  alpha = 0.5,\n  theta = 1\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nFormula: ALEAF ~ acifun_wrap(Ci, PPFD = PPFD, Vcmax = Vcmax, Jmax = Jmax, \n    Rd = Rd, Tleaf = Tleaf, Patm = Patm, TcorrectVJ = Tcorrect, \n    alpha = alpha, theta = theta, gmeso = gmeso, EaV = EaV, EdVC = EdVC, \n    delsC = delsC, EaJ = EaJ, EdVJ = EdVJ, delsJ = delsJ, Km = Km, \n    GammaStar = GammaStar)\n\nParameters:\n      Estimate Std. Error t value Pr(>|t|)    \nVcmax 26.99484    0.11549   233.7   <2e-16 ***\nJmax  46.63808    0.11599   402.1   <2e-16 ***\nRd     1.38036    0.02147    64.3   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.1347 on 295 degrees of freedom\n\nNumber of iterations to convergence: 6 \nAchieved convergence tolerance: 7.457e-06\n```\n\n\n:::\n:::\n\n\n我们看一下结果：\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat2$pars\n```\n:::\n\n::: {.cell tbl-cap='{}'}\n::: {.cell-output-display}\n\n\nTable: plantecophys 拟合 DAT 测量的参数 {#tbl-plantecophys2}\n\n|      |  Estimate| Std. Error|\n|:-----|---------:|----------:|\n|Vcmax | 26.994837|  0.1154895|\n|Jmax  | 46.638084|  0.1159879|\n|Rd    |  1.380359|  0.0214664|\n\n\n:::\n:::\n\n\n作图结果为：\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(dat2)\n```\n\n::: {.cell-output-display}\n![使用 plantecophys2 拟合 DAT 数据的图形](DAT-vs-racir_files/figure-html/fig-plantecophys2-1.png){#fig-plantecophys2 width=672}\n:::\n:::\n\n\n主要区别是我让 `plantecophys2` 显示 `summary` 结果，这样对拟合效果的查看比较直观，再者稍微将图形的显示进行了修改，我感觉更符合我的审美一些。本质上没做改动，只是方便查看拟合结果和图形进行了微调。\n\n## 使用 photosynthesis 来拟合 {#sec-racir-dat-fit-aci}\n\n:::{.callout-caution}\n## 未运行结束代码\n\n下面 `photosynthesis` 的代码，在我运行拟合过程中长时间不结束，估计是数据量大之后在某个算法上进行反复尝试的原因，为了避免卡在此处，下面的代码并没有运行结束。后面再进行测试 2024-03-26\n\n:::\n\n这里不再做过多介绍，具体细节可以参考 @#sec-photosynthesis-aci：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(photosynthesis)\n\ndat_aci$TLEAF <-dat_aci$TleafCnd + 273.15\nfit <- fit_aci_response(dat_aci,\n                         varnames = list(\n                           A_net = \"A\",\n                           T_leaf = \"TLEAF\",\n                           C_i = \"Ci\",\n                           PPFD = \"Qin\"\n                         ))\n```\n:::\n\n\n拟合结果：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nreshape2::melt(fit[[1]])\n```\n:::\n\n\n\n使用相同的方式查看图形：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfit[[2]]\n```\n:::\n\n\n本质上是使用的参数是 LI-6800 还是 LI-6400 得问题，使用 RACiR 还是 DAT，只是增加了拟合的数据量，无路如何，拟合点数量级的增长对拟合是有利无害的 @sec-overparam。\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}