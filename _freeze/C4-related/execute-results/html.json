{
  "hash": "effb469ccb4b3ad420f41e49b3dfaa61",
  "result": {
    "engine": "knitr",
    "markdown": "# C4 植物光合模拟 {#sec-c4}\n\n\n## `plantecophys`模拟\n\n之前的部分模型全部为关于 C3 植物的拟合，而`plantecophys`则是使用 @Caemmerer2000Biochemical 的方法，则是针对\nC4 植物的 A-Ci 曲线进行模拟。\n\n```{.r}\nAciC4(Ci, PPFD = 1500, Tleaf = 25, VPMAX25 = 120, \n      JMAX25 = 400, Vcmax = 60, Vpr = 80, \n      alpha = 0, gbs = 0.003, O2 = 210, \n      x = 0.4, THETA = 0.7, Q10 = 2.3, \n      RD0 = 1, RTEMP = 25, TBELOW = 0, \n      DAYRESP = 1, Q10F = 2, FRM = 0.5, ...)\n```\n\n**参数详解**\n\n* Ci：胞间二氧化碳浓度 ($\\mu mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* PPFD：光合光量子通量密度 ($\\mu mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* Tleaf：叶片温度 (\\textcelsius)。\n* VPMAX25：PEP 羧化最大速率 ($\\mu mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* JMAX25：最大电子传递速率 (\\textcelsius))。\n* Vcmax：最大羧化速率($\\mu mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* Vpr：PEP 再生($\\mu mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* alpha：维管束鞘细胞中 PSII 活性的比例。\n* gbs：维管束鞘导度 ($mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* O2：叶肉细胞氧气浓度。\n* x：电子传递的分配因子。\n* THETA：曲角参数。\n* Q10：Michaelis-Menten 中依赖于温度的参数。\n* RD0：基温下的呼吸 ($mol\\cdot m^{-2}\\cdot s^{-1}$)。\n* RTEMP：呼吸的基温(\\textcelsius)\n* TBELOW：此温度以下呼吸为0。\n* DAYRESP：明呼吸和暗呼吸的比值。\n* Q10F：呼吸依赖于温度的参数。\n* FRM：明呼吸中为叶肉呼吸的比例。\n\n以上参数均来自 @Caemmerer2000Biochemical，括号中的参数值均为默认值，具体应用时请按照实际情况修改。\n\n## C4 植物光合速率的计算 {#c4_sim}\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 模拟 C4 植物的 Ci 值，计算光合速率并作图\nlibrary(plantecophys)\naci <- AciC4(Ci=seq(5,600, length=101))\nwith(aci, plot(Ci, ALEAF, type='l', ylim=c(0,max(ALEAF))))\n```\n\n::: {.cell-output-display}\n![AciC4 模拟一定 Ci 梯度下光合速率的变化](C4-related_files/figure-html/fig-c4-plot-aci-1.png){#fig-c4-plot-aci width=672}\n:::\n:::\n\n\n:::{.callout-note}\n\n## 注意\n\n目前无法利用该函数来拟合观测到数据。\n:::\n\n## photoGEA\n\n下面的内容使用玉米的数据进行示例演示：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary('PhotoGEA')\nlibrary(lattice)\n\n# 列出完整的数据目录\nfiles = list.files('./data/C4-CORN', full.names = TRUE)\nfiles #展示一下使用的数据\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"./data/C4-CORN/2023-08-06-0840_ec-1.xlsx\"\n[2] \"./data/C4-CORN/2023-08-06-0926_ck-1.xlsx\"\n[3] \"./data/C4-CORN/2023-08-06-1005_ck-2.xlsx\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 读取目录里的数据\nlicor_exdf_list = lapply(files, function(fpath) {\n  read_gasex_file(fpath, 'time')\n})\n\n\n# 检查共有的表头文件，如果没更改设置，一台光合仪不会不同的\ncolumns_to_keep = do.call(identify_common_columns, licor_exdf_list)\n\n# 同上，该步骤基本无用，不过用了安全\nlicor_exdf_list = lapply(licor_exdf_list, function(x) {\n  x[ , columns_to_keep, TRUE]\n})\n\n# 按行合并数据\nlicor_data = do.call(rbind, licor_exdf_list)\n\n\n# Create a new identifier column formatted like `instrument - species - plot`\n# licor_data[ , 'curve_identifier'] =\n#   paste(licor_data[ , 'instrument'], '-', licor_data[ , 'species'], '-', licor_data[ , 'plot'])\n\n# 这一步修改了源代码，因为这里作者使用了 user constant 功能\n# 数据存储的时候多了上面 instrument speices等列，\n# 我拿到的数据没有使用这个功能，这里呢我手动在excel内添加了，\n# 因为数据里有个 newDef_0 列是空的，例如数据 ck1，我将空白\n# 单元格全部改为了ck1，以便区分不同的excel表的数据\n\nlicor_data[ , 'curve_identifier'] =\n  paste0(licor_data[ , 'newDef_0'], '-','corn' )\n\n# 检查数据点的数量是不是都是14个（我拿到的数据的个数，非强制）\ncheck_licor_data(licor_data, 'curve_identifier', 14, 'CO2_r_sp')\n\n# 因为测量顺序的原因，这种线看上去有点奇怪，但只是因为CO2测量点顺序的原因，\n# 检查如无异常，那么这个数据就可以进行下一步了，无需进行后面的数据删除点操作\n# 看上去这个测量比较不错\nxyplot(\n  A ~ Ci | curve_identifier,\n  data = licor_data$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']'),\n  ylab = paste('Net CO2 assimilation rate [', licor_data$units$A, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# 不删除数据无需运行数据删除的代码\n# licor_data <- organize_response_curve_data(\n#     licor_data,\n#     'curve_identifier',\n#     c(9, 10),\n#     'Ci'\n# )\n\n\n# 也就不需要再检查一遍了\n# xyplot(\n#   A ~ Ci | curve_identifier,\n#   data = licor_data$main_data,\n#   type = 'b',\n#   pch = 16,\n#   auto = TRUE,\n#   grid = TRUE,\n#   xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']'),\n#   ylab = paste('Net CO2 assimilation rate [', licor_data$units$A, ']')\n# )\n\n# 这里检查一下水分控制情况，属于额外的信息确认\n# 如果使用过程中正常控制，且无异常发生，那么可以不做\n# 这里看上去挺稳定的\nxyplot(\n  RHcham + `Humidifier_%` + `Desiccant_%` ~ Ci | curve_identifier,\n  data = licor_data$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  ylim = c(0, 100),\n  xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-2.png){width=672}\n:::\n\n```{.r .cell-code}\n# 同上，温度控制\nxyplot(\n  TleafCnd + Txchg ~ Ci | curve_identifier,\n  data = licor_data$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  ylim = c(25, 40),\n  xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']'),\n  ylab = paste0('Temperature (', licor_data$units$TleafCnd, ')')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-3.png){width=672}\n:::\n\n```{.r .cell-code}\n# 同上 CO2 控制，应该是最不可能出问题的，不然实验没法做\nxyplot(\n  CO2_s + CO2_r + CO2_r_sp ~ Ci | curve_identifier,\n  data = licor_data$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']'),\n  ylab = paste0('CO2 concentration (', licor_data$units$CO2_r, ')')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-4.png){width=672}\n:::\n\n```{.r .cell-code}\n# 稳定性参数，我觉得一通常不需要检查\n# 而且不同仪器参数设置不同，我跳过\n# xyplot(\n#   `A:OK` + `gsw:OK` + Stable ~ Ci | curve_identifier,\n#   data = licor_data$main_data,\n#   type = 'b',\n#   pch = 16,\n#   auto = TRUE,\n#   grid = TRUE,\n#   xlab = paste('Intercellular CO2 concentration [', licor_data$units$Ci, ']')\n# )\n\n\n# 数据清洗，如果正常测量，一半无需该步骤\n\n# # Only keep points where stability was achieved\n# licor_data <- licor_data[licor_data[, 'Stable'] == 2, , TRUE]\n\n# # Remove any curves that have fewer than three remaining points\n# npts <- by(licor_data, licor_data[, 'curve_identifier'], nrow)\n# ids_to_keep <- names(npts[npts > 2])\n# licor_data <- licor_data[licor_data[, 'curve_identifier'] %in% ids_to_keep, , TRUE]\n# Remove points where `instrument` is `ripe1` and `CO2_r_sp` is 1800\n# licor_data <- remove_points(\n#   licor_data,\n#   list(instrument = 'ripe1', CO2_r_sp = 1800)\n# )\n\n\n# 应用阿伦尼乌斯方程，计算温度相关参数\nlicor_data <- calculate_arrhenius(licor_data, c4_arrhenius_von_caemmerer)\n\n\n# 覆盖默认的叶肉导度参数，并根据数据的\n# newDef_0（名字根据自己的数据来确定）这一列来制定不同来源数据的值\n# gmc = Inf 表示拟合确定，确定的数值表示自己有相关数据\nlicor_data <- set_variable(\n  licor_data, 'gmc',\n  id_column = 'newDef_0',\n  value_table = list(ec = 3.0, ck1 = Inf, ck2 = Inf)\n)\n\n# 总压强计算\nlicor_data <- calculate_total_pressure(licor_data)\n\n# 计算分压 gm PCm\nlicor_data <- apply_gm(\n  licor_data,\n  'C4' # Indicate C4 photosynthesis\n)\n\n# Fit the C4 A-Ci curves\nc4_aci_results <- consolidate(by(\n  licor_data,                       # The `exdf` object containing the curves\n  licor_data[, 'curve_identifier'], # A factor used to split `licor_data` into chunks\n  fit_c4_aci,                       # The function to apply to each chunk of `licor_data`\n  Ca_atmospheric = 420              # Additional argument passed to `fit_c4_aci`\n))\n\n# 拟合结果查看\nxyplot(\n  A + A_fit ~ Ci | curve_identifier,\n  data = c4_aci_results$fits$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  xlab = paste('Intercellular CO2 concentration [', c4_aci_results$fits$units$Ci, ']'),\n  ylab = paste('Net CO2 assimilation rate [', c4_aci_results$fits$units$A, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-5.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot the C4 A-PCm fits (including limiting rates)\nxyplot(\n  A + Apc + Ar + A_fit ~ PCm | curve_identifier,\n  data = c4_aci_results$fits$main_data,\n  type = 'b',\n  auto.key = list(space = 'right'),\n  grid = TRUE,\n  xlab = paste('Mesophyll CO2 pressure [', c4_aci_results$fits$units$PCm, ']'),\n  ylab = paste('Net CO2 assimilation rate [', c4_aci_results$fits$units$A, ']'),\n  par.settings = list(\n    superpose.line = list(col = multi_curve_line_colors()),\n    superpose.symbol = list(col = multi_curve_point_colors(), pch = 16)\n  ),\n  curve_ids = c4_aci_results$fits[, 'curve_identifier'],\n  panel = function(...) {\n    panel.xyplot(...)\n    args <- list(...)\n    curve_id <- args$curve_ids[args$subscripts][1]\n    fit_param <-\n      c4_aci_results$parameters[c4_aci_results$parameters[, 'curve_identifier'] == curve_id, ]\n    panel.points(\n        fit_param$operating_An_model ~ fit_param$operating_PCm,\n        type = 'p',\n        col = 'black',\n        pch = 1\n    )\n  }\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-6.png){width=672}\n:::\n\n```{.r .cell-code}\n# 通过残差检查拟合结果：\n# 残差要足够小，并且没有明显的趋势才合理\nxyplot(\n  A_residuals ~ Ci | curve_identifier,\n  data = c4_aci_results$fits$main_data,\n  type = 'b',\n  pch = 16,\n  grid = TRUE,\n  xlab = paste('Intercellular CO2 concentration [', c4_aci_results$fits$units$Ci, ']'),\n  ylab = paste('Assimilation rate residual (measured - fitted)\\n[', c4_aci_results$fits$units$A, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-7.png){width=672}\n:::\n\n```{.r .cell-code}\n# 检查拟合结果：\n\n# Make a barchart showing average Vpmax values\nbarchart_with_errorbars(\n  c4_aci_results$parameters[, 'Vpmax_at_25'],\n  c4_aci_results$parameters[, 'newDef_0'],\n  ylim = c(0, 1500),\n  xlab = 'newDef_0',\n  ylab = paste('Vpmax at 25 degrees C [', c4_aci_results$parameters$units$Vpmax_at_25, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-8.png){width=672}\n:::\n\n```{.r .cell-code}\n# Make a boxplot showing the distribution of Vcmax values\nbwplot(\n  Vcmax_at_25 ~ newDef_0,\n  data = c4_aci_results$parameters$main_data,\n  ylim = c(0, 60),\n  xlab = 'newDef_0',\n  ylab = paste('Vcmax at 25 degrees C [', c4_aci_results$parameters$units$Vcmax_at_25, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-2-9.png){width=672}\n:::\n\n```{.r .cell-code}\n## 数据结果查看：\n# 注意区分数据的列\ncolumns_for_viewing <-\n  c('newDef_0', 'Rd_at_25', 'Vcmax_at_25', 'Vpmax_at_25')\n\nc4_aci_parameters <-\n  c4_aci_results$parameters[ , columns_for_viewing, TRUE]\n\nprint(c4_aci_parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  newDef_0 [UserDefCon] (NA) Rd_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                        ck1                                     0.07110684\n2                        ck2                                             NA\n3                         ec                                             NA\n  Vcmax_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                                          11.88785\n2                                                NA\n3                                                NA\n  Vpmax_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                                              1000\n2                                                NA\n3                                                NA\n```\n\n\n:::\n\n```{.r .cell-code}\n## 如果是同一处理，那么可以将数据进行平均值\n# 这里明显不是，我就不需要了\n# c4_aci_averages <- basic_stats(c4_aci_results$parameters, 'newDef_0')\n\n# # View the averages and errors\n# columns_to_view <- c(\n#   'newDef_0',\n#   'Rd_at_25_avg', 'Rd_at_25_stderr',\n#   'Vcmax_at_25_avg', 'Vcmax_at_25_stderr',\n#   'Vpmax_at_25_avg', 'Vpmax_at_25_stderr'\n# )\n# print(c4_aci_averages[ , columns_to_view, TRUE])\n```\n:::\n\n\n### 单个数据的测试\n\n上面是针对一个文件夹的数据的测试，下面是针对单个数据文件进行的测试：\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(PhotoGEA)\nlibrary(lattice) # 快速作图查看数据的依赖\n\n\n# 导入数据，时间戳使用'time'，非必须\ndf =  read_gasex_file('data/PhotoGEA.xlsx', 'time')\n\n# 阿伦尼乌斯方程计算 C4 photosynthetic 参数\ndf =  calculate_arrhenius(df, c4_arrhenius_von_caemmerer)\n\n# 计算总的压强 bar\ndf <- calculate_total_pressure(df)\n\n# 指定叶肉导度，如未知，则是 inf\ndf <- set_variable(\n  df, 'gmc',\n  value = Inf\n)\n\n\n# 计算叶肉 分压 PCm\ndf <- apply_gm(\n  df,\n  'C4' # Indicate C4 photosynthesis\n)\n\n# 拟合\nc4_fit = fit_c4_aci(df, Ca_atmospheric = 400)\n\n\n# 提取要查看的参数列\ncolumns_for_viewing <-\n  c('Rd_at_25', 'Vcmax_at_25', 'Vpmax_at_25')\n\n# 查看参数结果\nc4_fit_parameters <-\n c4_fit$parameters[ , columns_for_viewing, TRUE]\n\nprint(c4_fit_parameters)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  Rd_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                                       10.58733\n  Vcmax_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                                          53.58885\n  Vpmax_at_25 [fit_c4_aci] (micromol m^(-2) s^(-1))\n1                                          186.3173\n```\n\n\n:::\n\n```{.r .cell-code}\n# 快速作图查看数据\nxyplot(\n  A + A_fit ~ Ci,\n  data = c4_fit$fits$main_data,\n  type = 'b',\n  pch = 16,\n  auto = TRUE,\n  grid = TRUE,\n  xlab = paste('Intercellular CO2 concentration [', c4_fit$fits$units$Ci, ']'),\n  ylab = paste('Net CO2 assimilation rate [', c4_fit$fits$units$A, ']')\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n# Plot the C4 A-PCm fits (including limiting rates)\nxyplot(\n  A + Apc + Ar +A_fit ~ PCm,\n  data = c4_fit$fits$main_data,\n  type = 'l',\n  auto.key = list(space = 'right'),\n  grid = TRUE,\n  xlab = paste('Mesophyll CO2 pressure [', c4_fit$fits$units$PCm, ']'),\n  ylab = paste('Net CO2 assimilation rate [', c4_fit$fits$units$A, ']'),\n  par.settings = list(\n    superpose.line = list(col = multi_curve_colors()),\n    superpose.symbol = list(col = multi_curve_colors())\n  )\n)\n```\n\n::: {.cell-output-display}\n![](C4-related_files/figure-html/unnamed-chunk-3-2.png){width=672}\n:::\n:::\n\n\n\n\n## 手动实现\n\n下面的链接有手动实现：\n\n![光合学校2023](https://zhujiedong.quarto.pub/photosynthesis-school-2023/#/c4-植物手写代码及作图)\n\n这里不再赘述。\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}